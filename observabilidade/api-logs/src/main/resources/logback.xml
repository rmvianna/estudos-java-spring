<configuration>

    <property name="LOG_PATH" value="logs/api-cursos.log"/>

    <!-- appender para gerar em um unico arquivo -->
<!--    <appender name="FILE" class="ch.qos.logback.core.FileAppender">-->
<!--        <file>${LOG_PATH}</file>-->
<!--        <append>true</append>-->
<!--        <encoder>-->
<!--            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

    <!-- appender para gerar log em arquivo de forma rotacionada -->
<!--    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <file>${LOG_PATH}</file>-->
<!--        <append>true</append>-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--            <fileNamePattern>${LOG_PATH}.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>-->
<!--            <maxFileSize>100KB</maxFileSize>-->
<!--            <totalSizeCap>200KB</totalSizeCap> &lt;!&ndash; quando a soma do tamanho dos arqs gz ultrapassar este valor, eles serao excluidos &ndash;&gt;-->
<!--            <maxHistory>5</maxHistory> &lt;!&ndash; quantidade de dias que os arquivos compactados ficarao em disco &ndash;&gt;-->
<!--        </rollingPolicy>-->
<!--        <encoder>-->
<!--            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder>-->
<!--            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{0}.%M - %msg %rEx{short}%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    <logger name="br.com.alura" level="info" additivity="false">-->
<!--        <appender-ref ref="FILE" />-->
<!--    </logger>-->

<!--    <root level="info">-->
<!--        <appender-ref ref="STDOUT" />-->
<!--&lt;!&ndash;        <appender-ref ref="FILE" />&ndash;&gt;-->
<!--    </root>-->

    <contextName>prod</contextName>

    <appender name="JSON-STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
            <appendLineSeparator>true</appendLineSeparator>
            <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                <prettyPrint>true</prettyPrint>
            </jsonFormatter>
            <timestampFormat>yyyy-MM-dd' 'HH:mm:ss.SSS</timestampFormat>
        </layout>
    </appender>

    <appender name="LOKI" class="com.github.loki4j.logback.Loki4jAppender">
        <http>
            <url>http://loki-api-cursos:3100/loki/api/v1/push</url>
        </http>

        <format class="com.github.loki4j.logback.ProtobufEncoder">
            <label>
                <pattern>app:api-cursos,host:${HOSTNAME},thread:%thread,level:%level,class:%logger{0},method:%M,message:%msg</pattern>
                <keyValueSeparator>:</keyValueSeparator>
            </label>
            <message>
                <pattern>timestamp=%d{HH:mm:ss.SSS} thread=%thread level=%level class=%logger{0} method=%M %rEx{short} %n</pattern>
            </message>

            <sortByTime>true</sortByTime>
        </format>
    </appender>

    <root level="info">
        <appender-ref ref="JSON-STDOUT" />
        <appender-ref ref="LOKI" />
    </root>

</configuration>